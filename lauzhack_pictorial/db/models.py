from pydantic import BaseModel


class User(BaseModel):
    """
    Represents a user within the application.

    Each User instance contains the user's unique identifier, email address, and
    password (hashed, ideally).

    Attributes:
        id (int): The unique identifier for the user, typically the primary key in the database.
        email (str): The user's email address. It's used for identification purposes and should be unique.
        password (str): The hashed password of the user. Never store plaintext passwords for security reasons.

    Note:
        In a real application, the password should be securely hashed and the hash should be stored,
        not the plaintext password. The password attribute here is intended for example purposes only.
    """

    id: int
    email: str
    password: str


class Generation(BaseModel):
    """
    Represents an instance of content generated by a user.

    A Generation instance contains a unique identifier, the ID of the user who created it,
    an image ID which can be used to locate the generated image file, and the prompt used to
    generate the content.

    Attributes:
        id (int): The unique identifier for the generation instance, typically the primary key in the database.
        user_id (int): The ID of the user who generated the content, linking the Generation back to the User.
        image_id (str): A unique identifier for the generated image, used for retrieving the image from storage.
        prompt (str): The text prompt used in generating the image, providing context to the resulting image.
    """

    id: int
    user_id: int
    image_id: str
    prompt: str
